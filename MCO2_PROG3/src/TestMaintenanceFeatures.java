/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.awt.event.ActionListener;

import javax.swing.Action;

/**
 *
 * @author rogercanayon
 */
public class TestMaintenanceFeatures extends javax.swing.JFrame {

    /**
     * Creates new form TestVendFeatures
     */
    public TestMaintenanceFeatures() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        VendingFeaturesLbl = new javax.swing.JLabel();
        DoneBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        SlotContainer = new javax.swing.JPanel();
        Slot1 = new javax.swing.JPanel();
        itemPicture1 = new javax.swing.JLabel();
        itemName1 = new javax.swing.JScrollPane();
        itemNameTextArea1 = new javax.swing.JTextArea();
        itemQuantity1 = new javax.swing.JLabel();
        availableLbl1 = new javax.swing.JLabel();
        priceLbl1 = new javax.swing.JLabel();
        itemPrice1 = new javax.swing.JLabel();
        PickSlot1 = new javax.swing.JButton();
        PickSlot11 = new javax.swing.JButton();
        Slot2 = new javax.swing.JPanel();
        itemPicture10 = new javax.swing.JLabel();
        itemName10 = new javax.swing.JScrollPane();
        itemNameTextArea10 = new javax.swing.JTextArea();
        itemQuantity10 = new javax.swing.JLabel();
        availableLbl10 = new javax.swing.JLabel();
        priceLbl10 = new javax.swing.JLabel();
        itemPrice10 = new javax.swing.JLabel();
        PickSlot12 = new javax.swing.JButton();
        PickSlot13 = new javax.swing.JButton();
        Slot3 = new javax.swing.JPanel();
        itemPicture11 = new javax.swing.JLabel();
        itemName11 = new javax.swing.JScrollPane();
        itemNameTextArea11 = new javax.swing.JTextArea();
        itemQuantity11 = new javax.swing.JLabel();
        availableLbl11 = new javax.swing.JLabel();
        priceLbl11 = new javax.swing.JLabel();
        itemPrice11 = new javax.swing.JLabel();
        PickSlot14 = new javax.swing.JButton();
        PickSlot15 = new javax.swing.JButton();
        Slot4 = new javax.swing.JPanel();
        itemPicture12 = new javax.swing.JLabel();
        itemName12 = new javax.swing.JScrollPane();
        itemNameTextArea12 = new javax.swing.JTextArea();
        itemQuantity12 = new javax.swing.JLabel();
        availableLbl12 = new javax.swing.JLabel();
        priceLbl12 = new javax.swing.JLabel();
        itemPrice12 = new javax.swing.JLabel();
        PickSlot16 = new javax.swing.JButton();
        PickSlot17 = new javax.swing.JButton();
        Slot5 = new javax.swing.JPanel();
        itemPicture13 = new javax.swing.JLabel();
        itemName13 = new javax.swing.JScrollPane();
        itemNameTextArea13 = new javax.swing.JTextArea();
        itemQuantity13 = new javax.swing.JLabel();
        availableLbl13 = new javax.swing.JLabel();
        priceLbl13 = new javax.swing.JLabel();
        itemPrice13 = new javax.swing.JLabel();
        PickSlot18 = new javax.swing.JButton();
        PickSlot19 = new javax.swing.JButton();
        Slot6 = new javax.swing.JPanel();
        itemPicture14 = new javax.swing.JLabel();
        itemName14 = new javax.swing.JScrollPane();
        itemNameTextArea14 = new javax.swing.JTextArea();
        itemQuantity14 = new javax.swing.JLabel();
        availableLbl14 = new javax.swing.JLabel();
        priceLbl14 = new javax.swing.JLabel();
        itemPrice14 = new javax.swing.JLabel();
        PickSlot20 = new javax.swing.JButton();
        PickSlot21 = new javax.swing.JButton();
        Slot7 = new javax.swing.JPanel();
        itemPicture15 = new javax.swing.JLabel();
        itemName15 = new javax.swing.JScrollPane();
        itemNameTextArea15 = new javax.swing.JTextArea();
        itemQuantity15 = new javax.swing.JLabel();
        availableLbl15 = new javax.swing.JLabel();
        priceLbl15 = new javax.swing.JLabel();
        itemPrice15 = new javax.swing.JLabel();
        PickSlot22 = new javax.swing.JButton();
        PickSlot23 = new javax.swing.JButton();
        Slot8 = new javax.swing.JPanel();
        itemPicture16 = new javax.swing.JLabel();
        itemName16 = new javax.swing.JScrollPane();
        itemNameTextArea16 = new javax.swing.JTextArea();
        itemQuantity16 = new javax.swing.JLabel();
        availableLbl16 = new javax.swing.JLabel();
        priceLbl16 = new javax.swing.JLabel();
        itemPrice16 = new javax.swing.JLabel();
        PickSlot24 = new javax.swing.JButton();
        PickSlot25 = new javax.swing.JButton();
        Slot9 = new javax.swing.JPanel();
        itemPicture17 = new javax.swing.JLabel();
        itemName17 = new javax.swing.JScrollPane();
        itemNameTextArea17 = new javax.swing.JTextArea();
        itemQuantity17 = new javax.swing.JLabel();
        availableLbl17 = new javax.swing.JLabel();
        priceLbl17 = new javax.swing.JLabel();
        itemPrice17 = new javax.swing.JLabel();
        PickSlot26 = new javax.swing.JButton();
        PickSlot27 = new javax.swing.JButton();
        restockbalbtn = new javax.swing.JButton();
        inventoryBtn = new javax.swing.JButton();
        salesBtn = new javax.swing.JButton();
        collectBalBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vending Machine Factory");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(85, 88, 95));

        VendingFeaturesLbl.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        VendingFeaturesLbl.setForeground(new java.awt.Color(255, 255, 255));
        VendingFeaturesLbl.setText("Test Maintenance");

        DoneBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        DoneBtn.setText("Done");

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setLayout(null);

        SlotContainer.setBackground(new java.awt.Color(204, 204, 204));
        SlotContainer.setLayout(new java.awt.GridLayout(3, 3, 2, 2));

        itemPicture1.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName1.setBorder(null);

        itemNameTextArea1.setEditable(false);
        itemNameTextArea1.setColumns(7);
        itemNameTextArea1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea1.setLineWrap(true);
        itemNameTextArea1.setRows(1);
        itemNameTextArea1.setText("Item Name");
        itemNameTextArea1.setWrapStyleWord(true);
        itemNameTextArea1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName1.setViewportView(itemNameTextArea1);

        itemQuantity1.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity1.setText("0");
        itemQuantity1.setToolTipText("");

        availableLbl1.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl1.setText("Available:");

        priceLbl1.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl1.setText("Price:");

        itemPrice1.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice1.setText("0");
        itemPrice1.setToolTipText("");

        PickSlot1.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot1.setText("RESTOCK");

        PickSlot11.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot11.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot1Layout = new javax.swing.GroupLayout(Slot1);
        Slot1.setLayout(Slot1Layout);
        Slot1Layout.setHorizontalGroup(
            Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot1Layout.createSequentialGroup()
                        .addComponent(itemPicture1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl1)
                                    .addComponent(itemQuantity1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot1Layout.createSequentialGroup()
                        .addGroup(Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PickSlot11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PickSlot1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot1Layout.setVerticalGroup(
            Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot1Layout.createSequentialGroup()
                        .addComponent(priceLbl1)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice1)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl1)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(PickSlot1)
                .addGap(3, 3, 3)
                .addComponent(PickSlot11)
                .addContainerGap())
        );

        SlotContainer.add(Slot1);

        itemPicture10.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName10.setBorder(null);

        itemNameTextArea10.setEditable(false);
        itemNameTextArea10.setColumns(7);
        itemNameTextArea10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea10.setLineWrap(true);
        itemNameTextArea10.setRows(1);
        itemNameTextArea10.setText("Item Name");
        itemNameTextArea10.setWrapStyleWord(true);
        itemNameTextArea10.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName10.setViewportView(itemNameTextArea10);

        itemQuantity10.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity10.setText("0");
        itemQuantity10.setToolTipText("");

        availableLbl10.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl10.setText("Available:");

        priceLbl10.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl10.setText("Price:");

        itemPrice10.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice10.setText("0");
        itemPrice10.setToolTipText("");

        PickSlot12.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot12.setText("RESTOCK");

        PickSlot13.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot13.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot2Layout = new javax.swing.GroupLayout(Slot2);
        Slot2.setLayout(Slot2Layout);
        Slot2Layout.setHorizontalGroup(
            Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot2Layout.createSequentialGroup()
                        .addComponent(itemPicture10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl10)
                                    .addComponent(itemQuantity10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot2Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot2Layout.createSequentialGroup()
                        .addGroup(Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PickSlot13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PickSlot12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot2Layout.setVerticalGroup(
            Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot2Layout.createSequentialGroup()
                        .addComponent(priceLbl10)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice10)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl10)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(PickSlot12)
                .addGap(3, 3, 3)
                .addComponent(PickSlot13)
                .addContainerGap())
        );

        SlotContainer.add(Slot2);

        itemPicture11.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName11.setBorder(null);

        itemNameTextArea11.setEditable(false);
        itemNameTextArea11.setColumns(7);
        itemNameTextArea11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea11.setLineWrap(true);
        itemNameTextArea11.setRows(1);
        itemNameTextArea11.setText("Item Name");
        itemNameTextArea11.setWrapStyleWord(true);
        itemNameTextArea11.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName11.setViewportView(itemNameTextArea11);

        itemQuantity11.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity11.setText("0");
        itemQuantity11.setToolTipText("");

        availableLbl11.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl11.setText("Available:");

        priceLbl11.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl11.setText("Price:");

        itemPrice11.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice11.setText("0");
        itemPrice11.setToolTipText("");

        PickSlot14.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot14.setText("RESTOCK");

        PickSlot15.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot15.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot3Layout = new javax.swing.GroupLayout(Slot3);
        Slot3.setLayout(Slot3Layout);
        Slot3Layout.setHorizontalGroup(
            Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot3Layout.createSequentialGroup()
                        .addComponent(itemPicture11, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl11)
                                    .addComponent(itemQuantity11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot3Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot3Layout.createSequentialGroup()
                        .addGroup(Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PickSlot15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PickSlot14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot3Layout.setVerticalGroup(
            Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture11, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot3Layout.createSequentialGroup()
                        .addComponent(priceLbl11)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice11)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl11)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(PickSlot14)
                .addGap(3, 3, 3)
                .addComponent(PickSlot15)
                .addContainerGap())
        );

        SlotContainer.add(Slot3);

        itemPicture12.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName12.setBorder(null);

        itemNameTextArea12.setEditable(false);
        itemNameTextArea12.setColumns(7);
        itemNameTextArea12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea12.setLineWrap(true);
        itemNameTextArea12.setRows(1);
        itemNameTextArea12.setText("Item Name");
        itemNameTextArea12.setWrapStyleWord(true);
        itemNameTextArea12.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName12.setViewportView(itemNameTextArea12);

        itemQuantity12.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity12.setText("0");
        itemQuantity12.setToolTipText("");

        availableLbl12.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl12.setText("Available:");

        priceLbl12.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl12.setText("Price:");

        itemPrice12.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice12.setText("0");
        itemPrice12.setToolTipText("");

        PickSlot16.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot16.setText("RESTOCK");

        PickSlot17.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot17.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot4Layout = new javax.swing.GroupLayout(Slot4);
        Slot4.setLayout(Slot4Layout);
        Slot4Layout.setHorizontalGroup(
            Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot4Layout.createSequentialGroup()
                        .addComponent(itemPicture12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl12)
                                    .addComponent(itemQuantity12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot4Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot4Layout.createSequentialGroup()
                        .addGroup(Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PickSlot17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PickSlot16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot4Layout.setVerticalGroup(
            Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot4Layout.createSequentialGroup()
                        .addComponent(priceLbl12)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice12)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl12)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(PickSlot16)
                .addGap(3, 3, 3)
                .addComponent(PickSlot17)
                .addContainerGap())
        );

        SlotContainer.add(Slot4);

        itemPicture13.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName13.setBorder(null);

        itemNameTextArea13.setEditable(false);
        itemNameTextArea13.setColumns(7);
        itemNameTextArea13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea13.setLineWrap(true);
        itemNameTextArea13.setRows(1);
        itemNameTextArea13.setText("Item Name");
        itemNameTextArea13.setWrapStyleWord(true);
        itemNameTextArea13.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName13.setViewportView(itemNameTextArea13);

        itemQuantity13.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity13.setText("0");
        itemQuantity13.setToolTipText("");

        availableLbl13.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl13.setText("Available:");

        priceLbl13.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl13.setText("Price:");

        itemPrice13.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice13.setText("0");
        itemPrice13.setToolTipText("");

        PickSlot18.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot18.setText("RESTOCK");

        PickSlot19.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot19.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot5Layout = new javax.swing.GroupLayout(Slot5);
        Slot5.setLayout(Slot5Layout);
        Slot5Layout.setHorizontalGroup(
            Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot5Layout.createSequentialGroup()
                        .addComponent(itemPicture13, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl13)
                                    .addComponent(itemQuantity13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot5Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot5Layout.createSequentialGroup()
                        .addGroup(Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PickSlot19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PickSlot18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot5Layout.setVerticalGroup(
            Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture13, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot5Layout.createSequentialGroup()
                        .addComponent(priceLbl13)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice13)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl13)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName13, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(PickSlot18)
                .addGap(3, 3, 3)
                .addComponent(PickSlot19)
                .addContainerGap())
        );

        SlotContainer.add(Slot5);

        itemPicture14.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName14.setBorder(null);

        itemNameTextArea14.setEditable(false);
        itemNameTextArea14.setColumns(7);
        itemNameTextArea14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea14.setLineWrap(true);
        itemNameTextArea14.setRows(1);
        itemNameTextArea14.setText("Item Name");
        itemNameTextArea14.setWrapStyleWord(true);
        itemNameTextArea14.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName14.setViewportView(itemNameTextArea14);

        itemQuantity14.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity14.setText("0");
        itemQuantity14.setToolTipText("");

        availableLbl14.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl14.setText("Available:");

        priceLbl14.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl14.setText("Price:");

        itemPrice14.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice14.setText("0");
        itemPrice14.setToolTipText("");

        PickSlot20.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot20.setText("RESTOCK");

        PickSlot21.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot21.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot6Layout = new javax.swing.GroupLayout(Slot6);
        Slot6.setLayout(Slot6Layout);
        Slot6Layout.setHorizontalGroup(
            Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot6Layout.createSequentialGroup()
                        .addComponent(itemPicture14, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl14)
                                    .addComponent(itemQuantity14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot6Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot6Layout.createSequentialGroup()
                        .addGroup(Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PickSlot21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PickSlot20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot6Layout.setVerticalGroup(
            Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture14, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot6Layout.createSequentialGroup()
                        .addComponent(priceLbl14)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice14)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl14)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName14, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(PickSlot20)
                .addGap(3, 3, 3)
                .addComponent(PickSlot21)
                .addContainerGap())
        );

        SlotContainer.add(Slot6);

        itemPicture15.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName15.setBorder(null);

        itemNameTextArea15.setEditable(false);
        itemNameTextArea15.setColumns(7);
        itemNameTextArea15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea15.setLineWrap(true);
        itemNameTextArea15.setRows(1);
        itemNameTextArea15.setText("Item Name");
        itemNameTextArea15.setWrapStyleWord(true);
        itemNameTextArea15.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName15.setViewportView(itemNameTextArea15);

        itemQuantity15.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity15.setText("0");
        itemQuantity15.setToolTipText("");

        availableLbl15.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl15.setText("Available:");

        priceLbl15.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl15.setText("Price:");

        itemPrice15.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice15.setText("0");
        itemPrice15.setToolTipText("");

        PickSlot22.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot22.setText("RESTOCK");

        PickSlot23.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot23.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot7Layout = new javax.swing.GroupLayout(Slot7);
        Slot7.setLayout(Slot7Layout);
        Slot7Layout.setHorizontalGroup(
            Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot7Layout.createSequentialGroup()
                        .addComponent(itemPicture15, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot7Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl15)
                                    .addComponent(itemQuantity15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot7Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl15, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot7Layout.createSequentialGroup()
                        .addGroup(Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PickSlot23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PickSlot22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot7Layout.setVerticalGroup(
            Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture15, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot7Layout.createSequentialGroup()
                        .addComponent(priceLbl15)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice15)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl15)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity15)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName15, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(PickSlot22)
                .addGap(3, 3, 3)
                .addComponent(PickSlot23)
                .addContainerGap())
        );

        SlotContainer.add(Slot7);

        itemPicture16.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName16.setBorder(null);

        itemNameTextArea16.setEditable(false);
        itemNameTextArea16.setColumns(7);
        itemNameTextArea16.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea16.setLineWrap(true);
        itemNameTextArea16.setRows(1);
        itemNameTextArea16.setText("Item Name");
        itemNameTextArea16.setWrapStyleWord(true);
        itemNameTextArea16.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName16.setViewportView(itemNameTextArea16);

        itemQuantity16.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity16.setText("0");
        itemQuantity16.setToolTipText("");

        availableLbl16.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl16.setText("Available:");

        priceLbl16.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl16.setText("Price:");

        itemPrice16.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice16.setText("0");
        itemPrice16.setToolTipText("");

        PickSlot24.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot24.setText("RESTOCK");

        PickSlot25.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot25.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot8Layout = new javax.swing.GroupLayout(Slot8);
        Slot8.setLayout(Slot8Layout);
        Slot8Layout.setHorizontalGroup(
            Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot8Layout.createSequentialGroup()
                        .addComponent(itemPicture16, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl16)
                                    .addComponent(itemQuantity16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot8Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl16, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot8Layout.createSequentialGroup()
                        .addGroup(Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PickSlot25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PickSlot24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot8Layout.setVerticalGroup(
            Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture16, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot8Layout.createSequentialGroup()
                        .addComponent(priceLbl16)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice16)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl16)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity16)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName16, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(PickSlot24)
                .addGap(3, 3, 3)
                .addComponent(PickSlot25)
                .addContainerGap())
        );

        SlotContainer.add(Slot8);

        itemPicture17.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName17.setBorder(null);

        itemNameTextArea17.setEditable(false);
        itemNameTextArea17.setColumns(7);
        itemNameTextArea17.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea17.setLineWrap(true);
        itemNameTextArea17.setRows(1);
        itemNameTextArea17.setText("Item Name");
        itemNameTextArea17.setWrapStyleWord(true);
        itemNameTextArea17.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName17.setViewportView(itemNameTextArea17);

        itemQuantity17.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity17.setText("0");
        itemQuantity17.setToolTipText("");

        availableLbl17.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl17.setText("Available:");

        priceLbl17.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl17.setText("Price:");

        itemPrice17.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice17.setText("0");
        itemPrice17.setToolTipText("");

        PickSlot26.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot26.setText("RESTOCK");

        PickSlot27.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        PickSlot27.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot9Layout = new javax.swing.GroupLayout(Slot9);
        Slot9.setLayout(Slot9Layout);
        Slot9Layout.setHorizontalGroup(
            Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot9Layout.createSequentialGroup()
                        .addComponent(itemPicture17, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot9Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl17)
                                    .addComponent(itemQuantity17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot9Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot9Layout.createSequentialGroup()
                        .addGroup(Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PickSlot27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PickSlot26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot9Layout.setVerticalGroup(
            Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture17, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot9Layout.createSequentialGroup()
                        .addComponent(priceLbl17)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice17)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl17)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity17)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName17, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(PickSlot26)
                .addGap(3, 3, 3)
                .addComponent(PickSlot27)
                .addContainerGap())
        );

        SlotContainer.add(Slot9);

        jPanel2.add(SlotContainer);
        SlotContainer.setBounds(0, 0, 370, 530);

        restockbalbtn.setText("Restock Balance");
        jPanel2.add(restockbalbtn);
        restockbalbtn.setBounds(380, 120, 220, 23);

        inventoryBtn.setText("Inventory");
        jPanel2.add(inventoryBtn);
        inventoryBtn.setBounds(380, 240, 220, 23);

        salesBtn.setText("Print Sales");
        jPanel2.add(salesBtn);
        salesBtn.setBounds(380, 200, 220, 23);

        collectBalBtn.setText("Collect Balance");
        jPanel2.add(collectBalBtn);
        collectBalBtn.setBounds(380, 160, 220, 23);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(DoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(VendingFeaturesLbl)
                        .addContainerGap(383, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(VendingFeaturesLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Disables all of the pick buttons
     */
    public void disablePickBtn()
    {
        PickSlot1.setEnabled(false);
        PickSlot2.setEnabled(false);
        PickSlot3.setEnabled(false);
        PickSlot4.setEnabled(false);
        PickSlot5.setEnabled(false);
        PickSlot6.setEnabled(false);
        PickSlot7.setEnabled(false);
        PickSlot8.setEnabled(false);
        PickSlot9.setEnabled(false);
    }
    
    /**
     * Enables all of the pick buttons
     */
    public void enablePickBtn()
    {
        PickSlot1.setEnabled(true);
        PickSlot2.setEnabled(true);
        PickSlot3.setEnabled(true);
        PickSlot4.setEnabled(true);
        PickSlot5.setEnabled(true);
        PickSlot6.setEnabled(true);
        PickSlot7.setEnabled(true);
        PickSlot8.setEnabled(true);
        PickSlot9.setEnabled(true);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setrestockBtnListener(ActionListener actn)
    {
        restockBtn.addActionListener(actn);
    }

    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setDoneBtnListener(ActionListener actn)
    {
        DoneBtn.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setChangePrice(ActionListener actn)
    {
        changeBtn.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setReStockBalListener(ActionListener actn)
    {
        restockbalbtn.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setCollectBalListener(ActionListener actn)
    {
        collectBalBtn.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setSalesBtnListener(ActionListener actn)
    {
        salesBtn.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setInventoryBtnListener(ActionListener actn)
    {
        inventoryBtn.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setPickSlot1BtnListener(ActionListener actn)
    {
        PickSlot1.addActionListener(actn);
    }

    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setPickSlot2BtnListener(ActionListener actn)
    {
        PickSlot2.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setPickSlot3BtnListener(ActionListener actn)
    {
        PickSlot3.addActionListener(actn);
    }

    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setPickSlot4BtnListener(ActionListener actn)
    {
        PickSlot4.addActionListener(actn);
    }

    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setPickSlot5BtnListener(ActionListener actn)
    {
        PickSlot5.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setPickSlot6BtnListener(ActionListener actn)
    {
        PickSlot6.addActionListener(actn);
    }

    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setPickSlot7BtnListener(ActionListener actn)
    {
        PickSlot7.addActionListener(actn);
    }

    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setPickSlot8BtnListener(ActionListener actn)
    {
        PickSlot8.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setPickSlot9BtnListener(ActionListener actn)
    {
        PickSlot9.addActionListener(actn);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPickSlot1Enable(boolean check)
    {
        PickSlot1.setEnabled(check);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPickSlot2Enable(boolean check)
    {
        PickSlot2.setEnabled(check);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPickSlot3Enable(boolean check)
    {
        PickSlot3.setEnabled(check);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPickSlot4Enable(boolean check)
    {
        PickSlot4.setEnabled(check);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPickSlot5Enable(boolean check)
    {
        PickSlot5.setEnabled(check);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPickSlot6Enable(boolean check)
    {
        PickSlot6.setEnabled(check);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPickSlot7Enable(boolean check)
    {
        PickSlot7.setEnabled(check);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPickSlot8Enable(boolean check)
    {
        PickSlot8.setEnabled(check);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPickSlot9Enable(boolean check)
    {
        PickSlot9.setEnabled(check);
    }


    // Set item names in GUI
    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName1(String name)
    {
        this.itemNameTextArea1.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName2(String name)
    {
        this.itemNameTextArea2.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName3(String name)
    {
        this.itemNameTextArea3.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName4(String name)
    {
        this.itemNameTextArea4.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName5(String name)
    {
        this.itemNameTextArea5.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName6(String name)
    {
        this.itemNameTextArea6.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName7(String name)
    {
        this.itemNameTextArea7.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName8(String name)
    {
        this.itemNameTextArea8.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName9(String name)
    {
        this.itemNameTextArea9.setText(name);
    }


    // Setting calories

    /**
     * Sets the item calories
     * @param calories - contains the calories
     */
    public void setItemCalories1(int calories)
    {
        this.itemCalories1.setText(calories + " kCal");
    }

    /**
     * Sets the item calories
     * @param calories - contains the calories
     */
    public void setItemCalories2(int calories)
    {
        this.itemCalories2.setText(calories + " kCal");
    }

    /**
     * Sets the item calories
     * @param calories - contains the calories
     */
    public void setItemCalories3(int calories)
    {
        this.itemCalories3.setText(calories + " kCal");
    }

    /**
     * Sets the item calories
     * @param calories - contains the calories
     */
    public void setItemCalories4(int calories)
    {
        this.itemCalories4.setText(calories + " kCal");
    }

    /**
     * Sets the item calories
     * @param calories - contains the calories
     */
    public void setItemCalories5(int calories)
    {
        this.itemCalories5.setText(calories + " kCal");
    }

    /**
     * Sets the item calories
     * @param calories - contains the calories
     */
    public void setItemCalories6(int calories)
    {
        this.itemCalories6.setText(calories + " kCal");
    }

    /**
     * Sets the item calories
     * @param calories - contains the calories
     */
    public void setItemCalories7(int calories)
    {
        this.itemCalories7.setText(calories + " kCal");
    }

    /**
     * Sets the item calories
     * @param calories - contains the calories
     */
    public void setItemCalories8(int calories)
    {
        this.itemCalories8.setText(calories + " kCal");
    }

    /**
     * Sets the item calories
     * @param calories - contains the calories
     */
    public void setItemCalories9(int calories)
    {
        this.itemCalories9.setText(calories + " kCal");
    }
    
    // Setting price
    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice1(int price)
    {
        this.itemPrice1.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice2(int price)
    {
        this.itemPrice2.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice3(int price)
    {
        this.itemPrice3.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice4(int price)
    {
        this.itemPrice4.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice5(int price)
    {
        this.itemPrice5.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice6(int price)
    {
        this.itemPrice6.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice7(int price)
    {
        this.itemPrice7.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice8(int price)
    {
        this.itemPrice8.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice9(int price)
    {
        this.itemPrice9.setText("₱" + price);
    }

    // Setting the quantity available

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity1(int quantity)
    {
        this.itemQuantity1.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity2(int quantity)
    {
        this.itemQuantity2.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity3(int quantity)
    {
        this.itemQuantity3.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity4(int quantity)
    {
        this.itemQuantity4.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity5(int quantity)
    {
        this.itemQuantity5.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity6(int quantity)
    {
        this.itemQuantity6.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity7(int quantity)
    {
        this.itemQuantity7.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity8(int quantity)
    {
        this.itemQuantity8.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity9(int quantity)
    {
        this.itemQuantity9.setText(String.valueOf(quantity));
    }

    // Setting picture

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture1(String path)
    {
        itemPicture1.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture2(String path)
    {
        itemPicture2.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture3(String path)
    {
        itemPicture3.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture4(String path)
    {
        itemPicture4.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture5(String path)
    {
        itemPicture5.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture6(String path)
    {
        itemPicture6.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture7(String path)
    {
        itemPicture7.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture8(String path)
    {
        itemPicture8.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture9(String path)
    {
        itemPicture9.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestVendFeatures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestVendFeatures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestVendFeatures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestVendFeatures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestVendFeatures().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DoneBtn;
    private javax.swing.JButton PickSlot1;
    private javax.swing.JButton PickSlot11;
    private javax.swing.JButton PickSlot12;
    private javax.swing.JButton PickSlot13;
    private javax.swing.JButton PickSlot14;
    private javax.swing.JButton PickSlot15;
    private javax.swing.JButton PickSlot16;
    private javax.swing.JButton PickSlot17;
    private javax.swing.JButton PickSlot18;
    private javax.swing.JButton PickSlot19;
    private javax.swing.JButton PickSlot20;
    private javax.swing.JButton PickSlot21;
    private javax.swing.JButton PickSlot22;
    private javax.swing.JButton PickSlot23;
    private javax.swing.JButton PickSlot24;
    private javax.swing.JButton PickSlot25;
    private javax.swing.JButton PickSlot26;
    private javax.swing.JButton PickSlot27;
    private javax.swing.JPanel Slot1;
    private javax.swing.JPanel Slot2;
    private javax.swing.JPanel Slot3;
    private javax.swing.JPanel Slot4;
    private javax.swing.JPanel Slot5;
    private javax.swing.JPanel Slot6;
    private javax.swing.JPanel Slot7;
    private javax.swing.JPanel Slot8;
    private javax.swing.JPanel Slot9;
    private javax.swing.JPanel SlotContainer;
    private javax.swing.JLabel VendingFeaturesLbl;
    private javax.swing.JLabel availableLbl1;
    private javax.swing.JLabel availableLbl10;
    private javax.swing.JLabel availableLbl11;
    private javax.swing.JLabel availableLbl12;
    private javax.swing.JLabel availableLbl13;
    private javax.swing.JLabel availableLbl14;
    private javax.swing.JLabel availableLbl15;
    private javax.swing.JLabel availableLbl16;
    private javax.swing.JLabel availableLbl17;
    private javax.swing.JButton collectBalBtn;
    private javax.swing.JButton inventoryBtn;
    private javax.swing.JScrollPane itemName1;
    private javax.swing.JScrollPane itemName10;
    private javax.swing.JScrollPane itemName11;
    private javax.swing.JScrollPane itemName12;
    private javax.swing.JScrollPane itemName13;
    private javax.swing.JScrollPane itemName14;
    private javax.swing.JScrollPane itemName15;
    private javax.swing.JScrollPane itemName16;
    private javax.swing.JScrollPane itemName17;
    private javax.swing.JTextArea itemNameTextArea1;
    private javax.swing.JTextArea itemNameTextArea10;
    private javax.swing.JTextArea itemNameTextArea11;
    private javax.swing.JTextArea itemNameTextArea12;
    private javax.swing.JTextArea itemNameTextArea13;
    private javax.swing.JTextArea itemNameTextArea14;
    private javax.swing.JTextArea itemNameTextArea15;
    private javax.swing.JTextArea itemNameTextArea16;
    private javax.swing.JTextArea itemNameTextArea17;
    private javax.swing.JLabel itemPicture1;
    private javax.swing.JLabel itemPicture10;
    private javax.swing.JLabel itemPicture11;
    private javax.swing.JLabel itemPicture12;
    private javax.swing.JLabel itemPicture13;
    private javax.swing.JLabel itemPicture14;
    private javax.swing.JLabel itemPicture15;
    private javax.swing.JLabel itemPicture16;
    private javax.swing.JLabel itemPicture17;
    private javax.swing.JLabel itemPrice1;
    private javax.swing.JLabel itemPrice10;
    private javax.swing.JLabel itemPrice11;
    private javax.swing.JLabel itemPrice12;
    private javax.swing.JLabel itemPrice13;
    private javax.swing.JLabel itemPrice14;
    private javax.swing.JLabel itemPrice15;
    private javax.swing.JLabel itemPrice16;
    private javax.swing.JLabel itemPrice17;
    private javax.swing.JLabel itemQuantity1;
    private javax.swing.JLabel itemQuantity10;
    private javax.swing.JLabel itemQuantity11;
    private javax.swing.JLabel itemQuantity12;
    private javax.swing.JLabel itemQuantity13;
    private javax.swing.JLabel itemQuantity14;
    private javax.swing.JLabel itemQuantity15;
    private javax.swing.JLabel itemQuantity16;
    private javax.swing.JLabel itemQuantity17;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel priceLbl1;
    private javax.swing.JLabel priceLbl10;
    private javax.swing.JLabel priceLbl11;
    private javax.swing.JLabel priceLbl12;
    private javax.swing.JLabel priceLbl13;
    private javax.swing.JLabel priceLbl14;
    private javax.swing.JLabel priceLbl15;
    private javax.swing.JLabel priceLbl16;
    private javax.swing.JLabel priceLbl17;
    private javax.swing.JButton restockbalbtn;
    private javax.swing.JButton salesBtn;
    // End of variables declaration//GEN-END:variables
}
