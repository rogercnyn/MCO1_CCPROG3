/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.awt.event.ActionListener;

import javax.swing.Action;

/**
 *
 * @author rogercanayon
 */
public class TestMaintenanceFeatures extends javax.swing.JFrame {

    /**
     * Creates new form TestVendFeatures
     */
    public TestMaintenanceFeatures() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        VendingFeaturesLbl = new javax.swing.JLabel();
        DoneBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        SlotContainer = new javax.swing.JPanel();
        Slot1 = new javax.swing.JPanel();
        itemPicture1 = new javax.swing.JLabel();
        itemName1 = new javax.swing.JScrollPane();
        itemNameTextArea1 = new javax.swing.JTextArea();
        itemQuantity1 = new javax.swing.JLabel();
        availableLbl1 = new javax.swing.JLabel();
        priceLbl1 = new javax.swing.JLabel();
        itemPrice1 = new javax.swing.JLabel();
        reStock1 = new javax.swing.JButton();
        price1 = new javax.swing.JButton();
        Slot2 = new javax.swing.JPanel();
        itemPicture2 = new javax.swing.JLabel();
        itemName10 = new javax.swing.JScrollPane();
        itemNameTextArea10 = new javax.swing.JTextArea();
        itemQuantity2 = new javax.swing.JLabel();
        availableLbl10 = new javax.swing.JLabel();
        priceLbl10 = new javax.swing.JLabel();
        itemPrice2 = new javax.swing.JLabel();
        reStock2 = new javax.swing.JButton();
        price2 = new javax.swing.JButton();
        Slot3 = new javax.swing.JPanel();
        itemPicture3 = new javax.swing.JLabel();
        itemName11 = new javax.swing.JScrollPane();
        itemNameTextArea11 = new javax.swing.JTextArea();
        itemQuantity3 = new javax.swing.JLabel();
        availableLbl11 = new javax.swing.JLabel();
        priceLbl11 = new javax.swing.JLabel();
        itemPrice3 = new javax.swing.JLabel();
        reStock3 = new javax.swing.JButton();
        price3 = new javax.swing.JButton();
        Slot4 = new javax.swing.JPanel();
        itemPicture4 = new javax.swing.JLabel();
        itemName12 = new javax.swing.JScrollPane();
        itemNameTextArea12 = new javax.swing.JTextArea();
        itemQuantity4 = new javax.swing.JLabel();
        availableLbl12 = new javax.swing.JLabel();
        priceLbl12 = new javax.swing.JLabel();
        itemPrice4 = new javax.swing.JLabel();
        reStock4 = new javax.swing.JButton();
        price4 = new javax.swing.JButton();
        Slot5 = new javax.swing.JPanel();
        itemPicture5 = new javax.swing.JLabel();
        itemName13 = new javax.swing.JScrollPane();
        itemNameTextArea13 = new javax.swing.JTextArea();
        itemQuantity5 = new javax.swing.JLabel();
        availableLbl13 = new javax.swing.JLabel();
        priceLbl13 = new javax.swing.JLabel();
        itemPrice5 = new javax.swing.JLabel();
        reStock5 = new javax.swing.JButton();
        price5 = new javax.swing.JButton();
        Slot6 = new javax.swing.JPanel();
        itemPicture6 = new javax.swing.JLabel();
        itemName14 = new javax.swing.JScrollPane();
        itemNameTextArea14 = new javax.swing.JTextArea();
        itemQuantity6 = new javax.swing.JLabel();
        availableLbl14 = new javax.swing.JLabel();
        priceLbl14 = new javax.swing.JLabel();
        itemPrice6 = new javax.swing.JLabel();
        reStock6 = new javax.swing.JButton();
        price6 = new javax.swing.JButton();
        Slot7 = new javax.swing.JPanel();
        itemPicture7 = new javax.swing.JLabel();
        itemName15 = new javax.swing.JScrollPane();
        itemNameTextArea15 = new javax.swing.JTextArea();
        itemQuantity7 = new javax.swing.JLabel();
        availableLbl15 = new javax.swing.JLabel();
        priceLbl15 = new javax.swing.JLabel();
        itemPrice7 = new javax.swing.JLabel();
        reStock7 = new javax.swing.JButton();
        price7 = new javax.swing.JButton();
        Slot8 = new javax.swing.JPanel();
        itemPicture8 = new javax.swing.JLabel();
        itemName16 = new javax.swing.JScrollPane();
        itemNameTextArea16 = new javax.swing.JTextArea();
        itemQuantity8 = new javax.swing.JLabel();
        availableLbl16 = new javax.swing.JLabel();
        priceLbl16 = new javax.swing.JLabel();
        itemPrice8 = new javax.swing.JLabel();
        reStock8 = new javax.swing.JButton();
        price8 = new javax.swing.JButton();
        Slot9 = new javax.swing.JPanel();
        itemPicture9 = new javax.swing.JLabel();
        itemName17 = new javax.swing.JScrollPane();
        itemNameTextArea17 = new javax.swing.JTextArea();
        itemQuantity9 = new javax.swing.JLabel();
        availableLbl17 = new javax.swing.JLabel();
        priceLbl17 = new javax.swing.JLabel();
        itemPrice9 = new javax.swing.JLabel();
        reStock9 = new javax.swing.JButton();
        price9 = new javax.swing.JButton();
        restockbalbtn = new javax.swing.JButton();
        inventoryBtn = new javax.swing.JButton();
        salesBtn = new javax.swing.JButton();
        collectBalBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vending Machine Factory");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(85, 88, 95));

        VendingFeaturesLbl.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        VendingFeaturesLbl.setForeground(new java.awt.Color(255, 255, 255));
        VendingFeaturesLbl.setText("Test Maintenance");

        DoneBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        DoneBtn.setText("Done");

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setLayout(null);

        SlotContainer.setBackground(new java.awt.Color(204, 204, 204));
        SlotContainer.setLayout(new java.awt.GridLayout(3, 3, 2, 2));

        itemPicture1.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName1.setBorder(null);

        itemNameTextArea1.setEditable(false);
        itemNameTextArea1.setColumns(7);
        itemNameTextArea1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea1.setLineWrap(true);
        itemNameTextArea1.setRows(1);
        itemNameTextArea1.setText("Item Name");
        itemNameTextArea1.setWrapStyleWord(true);
        itemNameTextArea1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName1.setViewportView(itemNameTextArea1);

        itemQuantity1.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity1.setText("0");
        itemQuantity1.setToolTipText("");

        availableLbl1.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl1.setText("Available:");

        priceLbl1.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl1.setText("Price:");

        itemPrice1.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice1.setText("0");
        itemPrice1.setToolTipText("");

        reStock1.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        reStock1.setText("RESTOCK");

        price1.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        price1.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot1Layout = new javax.swing.GroupLayout(Slot1);
        Slot1.setLayout(Slot1Layout);
        Slot1Layout.setHorizontalGroup(
            Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot1Layout.createSequentialGroup()
                        .addComponent(itemPicture1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl1)
                                    .addComponent(itemQuantity1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot1Layout.createSequentialGroup()
                        .addGroup(Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(price1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reStock1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot1Layout.setVerticalGroup(
            Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot1Layout.createSequentialGroup()
                        .addComponent(priceLbl1)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice1)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl1)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(reStock1)
                .addGap(3, 3, 3)
                .addComponent(price1)
                .addContainerGap())
        );

        SlotContainer.add(Slot1);

        itemPicture2.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName10.setBorder(null);

        itemNameTextArea10.setEditable(false);
        itemNameTextArea10.setColumns(7);
        itemNameTextArea10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea10.setLineWrap(true);
        itemNameTextArea10.setRows(1);
        itemNameTextArea10.setText("Item Name");
        itemNameTextArea10.setWrapStyleWord(true);
        itemNameTextArea10.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName10.setViewportView(itemNameTextArea10);

        itemQuantity2.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity2.setText("0");
        itemQuantity2.setToolTipText("");

        availableLbl10.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl10.setText("Available:");

        priceLbl10.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl10.setText("Price:");

        itemPrice2.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice2.setText("0");
        itemPrice2.setToolTipText("");

        reStock2.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        reStock2.setText("RESTOCK");

        price2.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        price2.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot2Layout = new javax.swing.GroupLayout(Slot2);
        Slot2.setLayout(Slot2Layout);
        Slot2Layout.setHorizontalGroup(
            Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot2Layout.createSequentialGroup()
                        .addComponent(itemPicture2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl10)
                                    .addComponent(itemQuantity2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot2Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot2Layout.createSequentialGroup()
                        .addGroup(Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(price2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reStock2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot2Layout.setVerticalGroup(
            Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot2Layout.createSequentialGroup()
                        .addComponent(priceLbl10)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice2)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl10)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(reStock2)
                .addGap(3, 3, 3)
                .addComponent(price2)
                .addContainerGap())
        );

        SlotContainer.add(Slot2);

        itemPicture3.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName11.setBorder(null);

        itemNameTextArea11.setEditable(false);
        itemNameTextArea11.setColumns(7);
        itemNameTextArea11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea11.setLineWrap(true);
        itemNameTextArea11.setRows(1);
        itemNameTextArea11.setText("Item Name");
        itemNameTextArea11.setWrapStyleWord(true);
        itemNameTextArea11.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName11.setViewportView(itemNameTextArea11);

        itemQuantity3.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity3.setText("0");
        itemQuantity3.setToolTipText("");

        availableLbl11.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl11.setText("Available:");

        priceLbl11.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl11.setText("Price:");

        itemPrice3.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice3.setText("0");
        itemPrice3.setToolTipText("");

        reStock3.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        reStock3.setText("RESTOCK");

        price3.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        price3.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot3Layout = new javax.swing.GroupLayout(Slot3);
        Slot3.setLayout(Slot3Layout);
        Slot3Layout.setHorizontalGroup(
            Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot3Layout.createSequentialGroup()
                        .addComponent(itemPicture3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl11)
                                    .addComponent(itemQuantity3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot3Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot3Layout.createSequentialGroup()
                        .addGroup(Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(price3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reStock3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot3Layout.setVerticalGroup(
            Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot3Layout.createSequentialGroup()
                        .addComponent(priceLbl11)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice3)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl11)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(reStock3)
                .addGap(3, 3, 3)
                .addComponent(price3)
                .addContainerGap())
        );

        SlotContainer.add(Slot3);

        itemPicture4.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName12.setBorder(null);

        itemNameTextArea12.setEditable(false);
        itemNameTextArea12.setColumns(7);
        itemNameTextArea12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea12.setLineWrap(true);
        itemNameTextArea12.setRows(1);
        itemNameTextArea12.setText("Item Name");
        itemNameTextArea12.setWrapStyleWord(true);
        itemNameTextArea12.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName12.setViewportView(itemNameTextArea12);

        itemQuantity4.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity4.setText("0");
        itemQuantity4.setToolTipText("");

        availableLbl12.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl12.setText("Available:");

        priceLbl12.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl12.setText("Price:");

        itemPrice4.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice4.setText("0");
        itemPrice4.setToolTipText("");

        reStock4.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        reStock4.setText("RESTOCK");

        price4.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        price4.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot4Layout = new javax.swing.GroupLayout(Slot4);
        Slot4.setLayout(Slot4Layout);
        Slot4Layout.setHorizontalGroup(
            Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot4Layout.createSequentialGroup()
                        .addComponent(itemPicture4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl12)
                                    .addComponent(itemQuantity4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot4Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot4Layout.createSequentialGroup()
                        .addGroup(Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(price4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reStock4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot4Layout.setVerticalGroup(
            Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot4Layout.createSequentialGroup()
                        .addComponent(priceLbl12)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice4)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl12)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(reStock4)
                .addGap(3, 3, 3)
                .addComponent(price4)
                .addContainerGap())
        );

        SlotContainer.add(Slot4);

        itemPicture5.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName13.setBorder(null);

        itemNameTextArea13.setEditable(false);
        itemNameTextArea13.setColumns(7);
        itemNameTextArea13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea13.setLineWrap(true);
        itemNameTextArea13.setRows(1);
        itemNameTextArea13.setText("Item Name");
        itemNameTextArea13.setWrapStyleWord(true);
        itemNameTextArea13.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName13.setViewportView(itemNameTextArea13);

        itemQuantity5.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity5.setText("0");
        itemQuantity5.setToolTipText("");

        availableLbl13.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl13.setText("Available:");

        priceLbl13.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl13.setText("Price:");

        itemPrice5.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice5.setText("0");
        itemPrice5.setToolTipText("");

        reStock5.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        reStock5.setText("RESTOCK");

        price5.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        price5.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot5Layout = new javax.swing.GroupLayout(Slot5);
        Slot5.setLayout(Slot5Layout);
        Slot5Layout.setHorizontalGroup(
            Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot5Layout.createSequentialGroup()
                        .addComponent(itemPicture5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl13)
                                    .addComponent(itemQuantity5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot5Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot5Layout.createSequentialGroup()
                        .addGroup(Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(price5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reStock5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot5Layout.setVerticalGroup(
            Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot5Layout.createSequentialGroup()
                        .addComponent(priceLbl13)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice5)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl13)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName13, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(reStock5)
                .addGap(3, 3, 3)
                .addComponent(price5)
                .addContainerGap())
        );

        SlotContainer.add(Slot5);

        itemPicture6.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName14.setBorder(null);

        itemNameTextArea14.setEditable(false);
        itemNameTextArea14.setColumns(7);
        itemNameTextArea14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea14.setLineWrap(true);
        itemNameTextArea14.setRows(1);
        itemNameTextArea14.setText("Item Name");
        itemNameTextArea14.setWrapStyleWord(true);
        itemNameTextArea14.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName14.setViewportView(itemNameTextArea14);

        itemQuantity6.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity6.setText("0");
        itemQuantity6.setToolTipText("");

        availableLbl14.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl14.setText("Available:");

        priceLbl14.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl14.setText("Price:");

        itemPrice6.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice6.setText("0");
        itemPrice6.setToolTipText("");

        reStock6.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        reStock6.setText("RESTOCK");

        price6.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        price6.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot6Layout = new javax.swing.GroupLayout(Slot6);
        Slot6.setLayout(Slot6Layout);
        Slot6Layout.setHorizontalGroup(
            Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot6Layout.createSequentialGroup()
                        .addComponent(itemPicture6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl14)
                                    .addComponent(itemQuantity6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot6Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot6Layout.createSequentialGroup()
                        .addGroup(Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(price6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reStock6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot6Layout.setVerticalGroup(
            Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot6Layout.createSequentialGroup()
                        .addComponent(priceLbl14)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice6)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl14)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName14, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(reStock6)
                .addGap(3, 3, 3)
                .addComponent(price6)
                .addContainerGap())
        );

        SlotContainer.add(Slot6);

        itemPicture7.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName15.setBorder(null);

        itemNameTextArea15.setEditable(false);
        itemNameTextArea15.setColumns(7);
        itemNameTextArea15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea15.setLineWrap(true);
        itemNameTextArea15.setRows(1);
        itemNameTextArea15.setText("Item Name");
        itemNameTextArea15.setWrapStyleWord(true);
        itemNameTextArea15.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName15.setViewportView(itemNameTextArea15);

        itemQuantity7.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity7.setText("0");
        itemQuantity7.setToolTipText("");

        availableLbl15.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl15.setText("Available:");

        priceLbl15.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl15.setText("Price:");

        itemPrice7.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice7.setText("0");
        itemPrice7.setToolTipText("");

        reStock7.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        reStock7.setText("RESTOCK");

        price7.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        price7.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot7Layout = new javax.swing.GroupLayout(Slot7);
        Slot7.setLayout(Slot7Layout);
        Slot7Layout.setHorizontalGroup(
            Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot7Layout.createSequentialGroup()
                        .addComponent(itemPicture7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot7Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl15)
                                    .addComponent(itemQuantity7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot7Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl15, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot7Layout.createSequentialGroup()
                        .addGroup(Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(price7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reStock7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot7Layout.setVerticalGroup(
            Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot7Layout.createSequentialGroup()
                        .addComponent(priceLbl15)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice7)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl15)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName15, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(reStock7)
                .addGap(3, 3, 3)
                .addComponent(price7)
                .addContainerGap())
        );

        SlotContainer.add(Slot7);

        itemPicture8.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName16.setBorder(null);

        itemNameTextArea16.setEditable(false);
        itemNameTextArea16.setColumns(7);
        itemNameTextArea16.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea16.setLineWrap(true);
        itemNameTextArea16.setRows(1);
        itemNameTextArea16.setText("Item Name");
        itemNameTextArea16.setWrapStyleWord(true);
        itemNameTextArea16.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName16.setViewportView(itemNameTextArea16);

        itemQuantity8.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity8.setText("0");
        itemQuantity8.setToolTipText("");

        availableLbl16.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl16.setText("Available:");

        priceLbl16.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl16.setText("Price:");

        itemPrice8.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice8.setText("0");
        itemPrice8.setToolTipText("");

        reStock8.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        reStock8.setText("RESTOCK");

        price8.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        price8.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot8Layout = new javax.swing.GroupLayout(Slot8);
        Slot8.setLayout(Slot8Layout);
        Slot8Layout.setHorizontalGroup(
            Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot8Layout.createSequentialGroup()
                        .addComponent(itemPicture8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl16)
                                    .addComponent(itemQuantity8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot8Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl16, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot8Layout.createSequentialGroup()
                        .addGroup(Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(price8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reStock8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot8Layout.setVerticalGroup(
            Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot8Layout.createSequentialGroup()
                        .addComponent(priceLbl16)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice8)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl16)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName16, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(reStock8)
                .addGap(3, 3, 3)
                .addComponent(price8)
                .addContainerGap())
        );

        SlotContainer.add(Slot8);

        itemPicture9.setBackground(new java.awt.Color(102, 102, 102));
        itemPicture9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemPicture9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elements/ItemElements/hokkaido w_ pearls.png"))); // NOI18N

        itemName17.setBorder(null);

        itemNameTextArea17.setEditable(false);
        itemNameTextArea17.setColumns(7);
        itemNameTextArea17.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        itemNameTextArea17.setLineWrap(true);
        itemNameTextArea17.setRows(1);
        itemNameTextArea17.setText("Item Name");
        itemNameTextArea17.setWrapStyleWord(true);
        itemNameTextArea17.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemName17.setViewportView(itemNameTextArea17);

        itemQuantity9.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemQuantity9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemQuantity9.setText("0");
        itemQuantity9.setToolTipText("");

        availableLbl17.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        availableLbl17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        availableLbl17.setText("Available:");

        priceLbl17.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        priceLbl17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        priceLbl17.setText("Price:");

        itemPrice9.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        itemPrice9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        itemPrice9.setText("0");
        itemPrice9.setToolTipText("");

        reStock9.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        reStock9.setText("RESTOCK");

        price9.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        price9.setText("CHANGE PRICE");

        javax.swing.GroupLayout Slot9Layout = new javax.swing.GroupLayout(Slot9);
        Slot9.setLayout(Slot9Layout);
        Slot9Layout.setHorizontalGroup(
            Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Slot9Layout.createSequentialGroup()
                        .addComponent(itemPicture9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Slot9Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableLbl17)
                                    .addComponent(itemQuantity9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(itemPrice9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Slot9Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(priceLbl17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Slot9Layout.createSequentialGroup()
                        .addGroup(Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(price9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reStock9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemName17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Slot9Layout.setVerticalGroup(
            Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Slot9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Slot9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemPicture9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Slot9Layout.createSequentialGroup()
                        .addComponent(priceLbl17)
                        .addGap(2, 2, 2)
                        .addComponent(itemPrice9)
                        .addGap(6, 6, 6)
                        .addComponent(availableLbl17)
                        .addGap(2, 2, 2)
                        .addComponent(itemQuantity9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName17, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(reStock9)
                .addGap(3, 3, 3)
                .addComponent(price9)
                .addContainerGap())
        );

        SlotContainer.add(Slot9);

        jPanel2.add(SlotContainer);
        SlotContainer.setBounds(0, 0, 370, 530);

        restockbalbtn.setText("Restock Balance");
        jPanel2.add(restockbalbtn);
        restockbalbtn.setBounds(380, 120, 220, 23);

        inventoryBtn.setText("Inventory");
        jPanel2.add(inventoryBtn);
        inventoryBtn.setBounds(380, 240, 220, 23);

        salesBtn.setText("Print Sales");
        jPanel2.add(salesBtn);
        salesBtn.setBounds(380, 200, 220, 23);

        collectBalBtn.setText("Collect Balance");
        jPanel2.add(collectBalBtn);
        collectBalBtn.setBounds(380, 160, 220, 23);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(DoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(VendingFeaturesLbl)
                        .addContainerGap(383, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(VendingFeaturesLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Disables change btns for special
     */
    public void disableFlavorBtn()
    {
        price2.setEnabled(false);
        price3.setEnabled(false);
    }
    
    public void enableFlavorBtn()
    {
        price2.setEnabled(true);
        price3.setEnabled(true);
    }

    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
//    public void setrestockBtnListener(ActionListener actn)
//    {
//        restockBtn.addActionListener(actn);
//    }

    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setDoneBtnListener(ActionListener actn)
    {
        DoneBtn.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
//    public void setChangePrice(ActionListener actn)
//    {
//        changeBtn.addActionListener(actn);
//    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setReStockBalListener(ActionListener actn)
    {
        restockbalbtn.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setCollectBalListener(ActionListener actn)
    {
        collectBalBtn.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setSalesBtnListener(ActionListener actn)
    {
        salesBtn.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setInventoryBtnListener(ActionListener actn)
    {
        inventoryBtn.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setreStock1BtnListener(ActionListener actn)
    {
        reStock1.addActionListener(actn);
    }

    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setreStock2BtnListener(ActionListener actn)
    {
        reStock2.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setreStock3BtnListener(ActionListener actn)
    {
        reStock3.addActionListener(actn);
    }

    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setreStock4BtnListener(ActionListener actn)
    {
        reStock4.addActionListener(actn);
    }

    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setreStock5BtnListener(ActionListener actn)
    {
        reStock5.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setreStock6BtnListener(ActionListener actn)
    {
        reStock6.addActionListener(actn);
    }

    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setreStock7BtnListener(ActionListener actn)
    {
        reStock7.addActionListener(actn);
    }

    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setreStock8BtnListener(ActionListener actn)
    {
        reStock8.addActionListener(actn);
    }
    
    /**
     * Sets a button action listener
     * @param actn - an action listener
     */
    public void setreStock9BtnListener(ActionListener actn)
    {
        reStock9.addActionListener(actn);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPrice1BtnListener(ActionListener actn)
    {
        price1.addActionListener(actn);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPrice2BtnListener(ActionListener actn)
    {
        price2.addActionListener(actn);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPrice3BtnListener(ActionListener actn)
    {
        price3.addActionListener(actn);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPrice4BtnListener(ActionListener actn)
    {
        price4.addActionListener(actn);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPrice5BtnListener(ActionListener actn)
    {
        price5.addActionListener(actn);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPrice6BtnListener(ActionListener actn)
    {
        price6.addActionListener(actn);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPrice7BtnListener(ActionListener actn)
    {
        price7.addActionListener(actn);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPrice8BtnListener(ActionListener actn)
    {
        price8.addActionListener(actn);
    }

    /**
     * Sets the 'enable' capability of the button
     * @param check - boolean value
     */
    public void setPrice9BtnListener(ActionListener actn)
    {
        price9.addActionListener(actn);
    }


    // Set item names in GUI
    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName1(String name)
    {
        this.itemNameTextArea1.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName2(String name)
    {
        this.itemNameTextArea10.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName3(String name)
    {
        this.itemNameTextArea11.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName4(String name)
    {
        this.itemNameTextArea12.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName5(String name)
    {
        this.itemNameTextArea13.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName6(String name)
    {
        this.itemNameTextArea14.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName7(String name)
    {
        this.itemNameTextArea15.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName8(String name)
    {
        this.itemNameTextArea16.setText(name);
    }

    /**
     * Sets the item name
     * @param name - contains the name
     */
    public void setItemName9(String name)
    {
        this.itemNameTextArea17.setText(name);
    }


    // Setting calories

    
    
    // Setting price
    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice1(int price)
    {
        this.itemPrice1.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice2(int price)
    {
        this.itemPrice2.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice3(int price)
    {
        this.itemPrice3.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice4(int price)
    {
        this.itemPrice4.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice5(int price)
    {
        this.itemPrice5.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice6(int price)
    {
        this.itemPrice6.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice7(int price)
    {
        this.itemPrice7.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice8(int price)
    {
        this.itemPrice8.setText("₱" + price);
    }

    /**
     * Sets the item price
     * @param price - contains the price
     */
    public void setItemPrice9(int price)
    {
        this.itemPrice9.setText("₱" + price);
    }

    // Setting the quantity available

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity1(int quantity)
    {
        this.itemQuantity1.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity2(int quantity)
    {
        this.itemQuantity2.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity3(int quantity)
    {
        this.itemQuantity3.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity4(int quantity)
    {
        this.itemQuantity4.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity5(int quantity)
    {
        this.itemQuantity5.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity6(int quantity)
    {
        this.itemQuantity6.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity7(int quantity)
    {
        this.itemQuantity7.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity8(int quantity)
    {
        this.itemQuantity8.setText(String.valueOf(quantity));
    }

    /**
     * Sets the item quantity
     * @param quantity - contains the quantity
     */
    public void setItemQuantity9(int quantity)
    {
        this.itemQuantity9.setText(String.valueOf(quantity));
    }

    // Setting picture

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture1(String path)
    {
        itemPicture1.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture2(String path)
    {
        itemPicture2.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture3(String path)
    {
        itemPicture3.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture4(String path)
    {
        itemPicture4.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture5(String path)
    {
        itemPicture5.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture6(String path)
    {
        itemPicture6.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture7(String path)
    {
        itemPicture7.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture8(String path)
    {
        itemPicture8.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }

    /**
     * Sets the item picture
     * @param path - contains the path of the picture
     */
    public void setItemPicture9(String path)
    {
        itemPicture9.setIcon(new javax.swing.ImageIcon(getClass().getResource(path)));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestVendFeatures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestVendFeatures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestVendFeatures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestVendFeatures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestVendFeatures().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DoneBtn;
    private javax.swing.JPanel Slot1;
    private javax.swing.JPanel Slot2;
    private javax.swing.JPanel Slot3;
    private javax.swing.JPanel Slot4;
    private javax.swing.JPanel Slot5;
    private javax.swing.JPanel Slot6;
    private javax.swing.JPanel Slot7;
    private javax.swing.JPanel Slot8;
    private javax.swing.JPanel Slot9;
    private javax.swing.JPanel SlotContainer;
    private javax.swing.JLabel VendingFeaturesLbl;
    private javax.swing.JLabel availableLbl1;
    private javax.swing.JLabel availableLbl10;
    private javax.swing.JLabel availableLbl11;
    private javax.swing.JLabel availableLbl12;
    private javax.swing.JLabel availableLbl13;
    private javax.swing.JLabel availableLbl14;
    private javax.swing.JLabel availableLbl15;
    private javax.swing.JLabel availableLbl16;
    private javax.swing.JLabel availableLbl17;
    private javax.swing.JButton collectBalBtn;
    private javax.swing.JButton inventoryBtn;
    private javax.swing.JScrollPane itemName1;
    private javax.swing.JScrollPane itemName10;
    private javax.swing.JScrollPane itemName11;
    private javax.swing.JScrollPane itemName12;
    private javax.swing.JScrollPane itemName13;
    private javax.swing.JScrollPane itemName14;
    private javax.swing.JScrollPane itemName15;
    private javax.swing.JScrollPane itemName16;
    private javax.swing.JScrollPane itemName17;
    private javax.swing.JTextArea itemNameTextArea1;
    private javax.swing.JTextArea itemNameTextArea10;
    private javax.swing.JTextArea itemNameTextArea11;
    private javax.swing.JTextArea itemNameTextArea12;
    private javax.swing.JTextArea itemNameTextArea13;
    private javax.swing.JTextArea itemNameTextArea14;
    private javax.swing.JTextArea itemNameTextArea15;
    private javax.swing.JTextArea itemNameTextArea16;
    private javax.swing.JTextArea itemNameTextArea17;
    private javax.swing.JLabel itemPicture1;
    private javax.swing.JLabel itemPicture2;
    private javax.swing.JLabel itemPicture3;
    private javax.swing.JLabel itemPicture4;
    private javax.swing.JLabel itemPicture5;
    private javax.swing.JLabel itemPicture6;
    private javax.swing.JLabel itemPicture7;
    private javax.swing.JLabel itemPicture8;
    private javax.swing.JLabel itemPicture9;
    private javax.swing.JLabel itemPrice1;
    private javax.swing.JLabel itemPrice2;
    private javax.swing.JLabel itemPrice3;
    private javax.swing.JLabel itemPrice4;
    private javax.swing.JLabel itemPrice5;
    private javax.swing.JLabel itemPrice6;
    private javax.swing.JLabel itemPrice7;
    private javax.swing.JLabel itemPrice8;
    private javax.swing.JLabel itemPrice9;
    private javax.swing.JLabel itemQuantity1;
    private javax.swing.JLabel itemQuantity2;
    private javax.swing.JLabel itemQuantity3;
    private javax.swing.JLabel itemQuantity4;
    private javax.swing.JLabel itemQuantity5;
    private javax.swing.JLabel itemQuantity6;
    private javax.swing.JLabel itemQuantity7;
    private javax.swing.JLabel itemQuantity8;
    private javax.swing.JLabel itemQuantity9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton price1;
    private javax.swing.JButton price2;
    private javax.swing.JButton price3;
    private javax.swing.JButton price4;
    private javax.swing.JButton price5;
    private javax.swing.JButton price6;
    private javax.swing.JButton price7;
    private javax.swing.JButton price8;
    private javax.swing.JButton price9;
    private javax.swing.JLabel priceLbl1;
    private javax.swing.JLabel priceLbl10;
    private javax.swing.JLabel priceLbl11;
    private javax.swing.JLabel priceLbl12;
    private javax.swing.JLabel priceLbl13;
    private javax.swing.JLabel priceLbl14;
    private javax.swing.JLabel priceLbl15;
    private javax.swing.JLabel priceLbl16;
    private javax.swing.JLabel priceLbl17;
    private javax.swing.JButton reStock1;
    private javax.swing.JButton reStock2;
    private javax.swing.JButton reStock3;
    private javax.swing.JButton reStock4;
    private javax.swing.JButton reStock5;
    private javax.swing.JButton reStock6;
    private javax.swing.JButton reStock7;
    private javax.swing.JButton reStock8;
    private javax.swing.JButton reStock9;
    private javax.swing.JButton restockbalbtn;
    private javax.swing.JButton salesBtn;
    // End of variables declaration//GEN-END:variables
}
